const swaggerAutogen = require('swagger-autogen')()
const errorDefinitions = require('./definitions/error-definitions');
const templateDefinitions = require('./definitions/template-definitions');
const publishDefinitions = require('./definitions/publish-definitios');
const authDefinitions = require('./definitions/auth-definition');

// конфигурация для автоматической генерации документации Swagger в Node.js
const doc = {
    info: {
        version: "1.0.0",
        title: "My API",
        description: "Documentation automatically generated by the <b>swagger-autogen</b> module."
    },
    host: "localhost:3000",
    basePath: "/",
    schemes: ['http', 'https'],
    // Форматы данных, которые API может принимать
    consumes: ['application/json'],
    // Форматы данных, которые API может отдавать
    produces: ['application/json'],
    // Используется для группировки и описания конечных точек API.
    tags: [
        {
            "name": "MOCK_DATA",
            "description": "MOCK DATA PROVIDER"
        },
        {
            "name": "Templates",
            "description": "TEMPLATE HANDLERS"
        },
        {
            "name": "PublishRequests",
            "description": "PUBLISH REQUESTS HANDLERS"
        },
        {
            "name": "Authentication",
            "description": "AUTH HANDLERS"
        }
    ],
    // Определения безопасности
    securityDefinitions: {
        jwtAuth: {
            type: "http",           // Указывает тип аутентификации HTTP
            scheme: "bearer",       // Указывает на использование схемы Bearer Token
            bearerFormat: "JWT"     // Необязательное поле, указывающее, что токен имеет формат JWT
        }
    },
    /*
    * Описание моделей данных, которые могут быть использованы в вашем API
    * Определения объектов в секции definitions (или components.schemas, если используется OpenAPI 3.0)
    * задают модели данных, которые могут быть использованы для передачи и получения данных через эндпоинты
    * */
    definitions: {
        ...errorDefinitions,
        ...templateDefinitions,
        ...publishDefinitions,
        ...authDefinitions,
    }
}

//  Путь к файлу, в который будет сохранена сгенерированная документация Swagger (в формате JSON).
const outputFile = './swagger-output.json'
// Массив с путями к файлам, содержащим определение конечных точек API
const endpointsFiles = ['./src/rest-api-routes/*/*.js']

// Функция, которая генерирует документацию на основе переданных данных:
swaggerAutogen(outputFile, endpointsFiles, doc).then(() => {
    require('./index')           // Your project's root file
})